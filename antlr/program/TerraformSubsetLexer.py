# Generated from TerraformSubset.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,129,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,1,8,1,8,3,8,81,8,8,1,9,4,9,84,8,9,11,9,12,9,85,1,9,1,
        9,4,9,90,8,9,11,9,12,9,91,3,9,94,8,9,1,10,1,10,1,10,1,10,5,10,100,
        8,10,10,10,12,10,103,9,10,1,10,1,10,1,11,1,11,5,11,109,8,11,10,11,
        12,11,112,9,11,1,12,1,12,5,12,116,8,12,10,12,12,12,119,9,12,1,12,
        1,12,1,13,4,13,124,8,13,11,13,12,13,125,1,13,1,13,0,0,14,1,1,3,2,
        5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,1,
        0,6,1,0,48,57,2,0,34,34,92,92,3,0,65,90,95,95,97,122,4,0,48,57,65,
        90,95,95,97,122,2,0,10,10,13,13,3,0,9,10,13,13,32,32,137,0,1,1,0,
        0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
        0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,1,29,1,0,0,0,3,38,1,0,0,0,
        5,40,1,0,0,0,7,42,1,0,0,0,9,51,1,0,0,0,11,60,1,0,0,0,13,67,1,0,0,
        0,15,69,1,0,0,0,17,80,1,0,0,0,19,83,1,0,0,0,21,95,1,0,0,0,23,106,
        1,0,0,0,25,113,1,0,0,0,27,123,1,0,0,0,29,30,5,112,0,0,30,31,5,114,
        0,0,31,32,5,111,0,0,32,33,5,118,0,0,33,34,5,105,0,0,34,35,5,100,
        0,0,35,36,5,101,0,0,36,37,5,114,0,0,37,2,1,0,0,0,38,39,5,123,0,0,
        39,4,1,0,0,0,40,41,5,125,0,0,41,6,1,0,0,0,42,43,5,114,0,0,43,44,
        5,101,0,0,44,45,5,115,0,0,45,46,5,111,0,0,46,47,5,117,0,0,47,48,
        5,114,0,0,48,49,5,99,0,0,49,50,5,101,0,0,50,8,1,0,0,0,51,52,5,118,
        0,0,52,53,5,97,0,0,53,54,5,114,0,0,54,55,5,105,0,0,55,56,5,97,0,
        0,56,57,5,98,0,0,57,58,5,108,0,0,58,59,5,101,0,0,59,10,1,0,0,0,60,
        61,5,111,0,0,61,62,5,117,0,0,62,63,5,116,0,0,63,64,5,112,0,0,64,
        65,5,117,0,0,65,66,5,116,0,0,66,12,1,0,0,0,67,68,5,61,0,0,68,14,
        1,0,0,0,69,70,5,46,0,0,70,16,1,0,0,0,71,72,5,116,0,0,72,73,5,114,
        0,0,73,74,5,117,0,0,74,81,5,101,0,0,75,76,5,102,0,0,76,77,5,97,0,
        0,77,78,5,108,0,0,78,79,5,115,0,0,79,81,5,101,0,0,80,71,1,0,0,0,
        80,75,1,0,0,0,81,18,1,0,0,0,82,84,7,0,0,0,83,82,1,0,0,0,84,85,1,
        0,0,0,85,83,1,0,0,0,85,86,1,0,0,0,86,93,1,0,0,0,87,89,5,46,0,0,88,
        90,7,0,0,0,89,88,1,0,0,0,90,91,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,
        0,92,94,1,0,0,0,93,87,1,0,0,0,93,94,1,0,0,0,94,20,1,0,0,0,95,101,
        5,34,0,0,96,97,5,92,0,0,97,100,9,0,0,0,98,100,8,1,0,0,99,96,1,0,
        0,0,99,98,1,0,0,0,100,103,1,0,0,0,101,99,1,0,0,0,101,102,1,0,0,0,
        102,104,1,0,0,0,103,101,1,0,0,0,104,105,5,34,0,0,105,22,1,0,0,0,
        106,110,7,2,0,0,107,109,7,3,0,0,108,107,1,0,0,0,109,112,1,0,0,0,
        110,108,1,0,0,0,110,111,1,0,0,0,111,24,1,0,0,0,112,110,1,0,0,0,113,
        117,5,35,0,0,114,116,8,4,0,0,115,114,1,0,0,0,116,119,1,0,0,0,117,
        115,1,0,0,0,117,118,1,0,0,0,118,120,1,0,0,0,119,117,1,0,0,0,120,
        121,6,12,0,0,121,26,1,0,0,0,122,124,7,5,0,0,123,122,1,0,0,0,124,
        125,1,0,0,0,125,123,1,0,0,0,125,126,1,0,0,0,126,127,1,0,0,0,127,
        128,6,13,0,0,128,28,1,0,0,0,10,0,80,85,91,93,99,101,110,117,125,
        1,6,0,0
    ]

class TerraformSubsetLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    BOOLEAN = 9
    NUMBER = 10
    STRING = 11
    IDENTIFIER = 12
    COMMENT = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'provider'", "'{'", "'}'", "'resource'", "'variable'", "'output'", 
            "'='", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "BOOLEAN", "NUMBER", "STRING", "IDENTIFIER", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "BOOLEAN", "NUMBER", "STRING", "IDENTIFIER", "COMMENT", 
                  "WS" ]

    grammarFileName = "TerraformSubset.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


